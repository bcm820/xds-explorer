/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var envoy_api_v2_route_route_pb = require('./envoy/api/v2/route/route_pb.js');
goog.object.extend(proto, envoy_api_v2_route_route_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var validate_validate_pb = require('./validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
goog.exportSymbol('proto.envoy.service.tap.v2alpha.FilePerTapSink', null, global);
goog.exportSymbol('proto.envoy.service.tap.v2alpha.HttpHeadersMatch', null, global);
goog.exportSymbol('proto.envoy.service.tap.v2alpha.MatchPredicate', null, global);
goog.exportSymbol('proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet', null, global);
goog.exportSymbol('proto.envoy.service.tap.v2alpha.OutputConfig', null, global);
goog.exportSymbol('proto.envoy.service.tap.v2alpha.OutputSink', null, global);
goog.exportSymbol('proto.envoy.service.tap.v2alpha.OutputSink.Format', null, global);
goog.exportSymbol('proto.envoy.service.tap.v2alpha.StreamingAdminSink', null, global);
goog.exportSymbol('proto.envoy.service.tap.v2alpha.TapConfig', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.tap.v2alpha.TapConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.service.tap.v2alpha.TapConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.service.tap.v2alpha.TapConfig.displayName = 'proto.envoy.service.tap.v2alpha.TapConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.tap.v2alpha.MatchPredicate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.service.tap.v2alpha.MatchPredicate.oneofGroups_);
};
goog.inherits(proto.envoy.service.tap.v2alpha.MatchPredicate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.service.tap.v2alpha.MatchPredicate.displayName = 'proto.envoy.service.tap.v2alpha.MatchPredicate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet.repeatedFields_, null);
};
goog.inherits(proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet.displayName = 'proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.tap.v2alpha.HttpHeadersMatch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.service.tap.v2alpha.HttpHeadersMatch.repeatedFields_, null);
};
goog.inherits(proto.envoy.service.tap.v2alpha.HttpHeadersMatch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.service.tap.v2alpha.HttpHeadersMatch.displayName = 'proto.envoy.service.tap.v2alpha.HttpHeadersMatch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.tap.v2alpha.OutputConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.service.tap.v2alpha.OutputConfig.repeatedFields_, null);
};
goog.inherits(proto.envoy.service.tap.v2alpha.OutputConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.service.tap.v2alpha.OutputConfig.displayName = 'proto.envoy.service.tap.v2alpha.OutputConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.tap.v2alpha.OutputSink = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.service.tap.v2alpha.OutputSink.oneofGroups_);
};
goog.inherits(proto.envoy.service.tap.v2alpha.OutputSink, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.service.tap.v2alpha.OutputSink.displayName = 'proto.envoy.service.tap.v2alpha.OutputSink';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.tap.v2alpha.StreamingAdminSink = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.service.tap.v2alpha.StreamingAdminSink, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.service.tap.v2alpha.StreamingAdminSink.displayName = 'proto.envoy.service.tap.v2alpha.StreamingAdminSink';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.service.tap.v2alpha.FilePerTapSink = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.service.tap.v2alpha.FilePerTapSink, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.service.tap.v2alpha.FilePerTapSink.displayName = 'proto.envoy.service.tap.v2alpha.FilePerTapSink';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.tap.v2alpha.TapConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.tap.v2alpha.TapConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.tap.v2alpha.TapConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.tap.v2alpha.TapConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchConfig: (f = msg.getMatchConfig()) && proto.envoy.service.tap.v2alpha.MatchPredicate.toObject(includeInstance, f),
    outputConfig: (f = msg.getOutputConfig()) && proto.envoy.service.tap.v2alpha.OutputConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.tap.v2alpha.TapConfig}
 */
proto.envoy.service.tap.v2alpha.TapConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.tap.v2alpha.TapConfig;
  return proto.envoy.service.tap.v2alpha.TapConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.tap.v2alpha.TapConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.tap.v2alpha.TapConfig}
 */
proto.envoy.service.tap.v2alpha.TapConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.service.tap.v2alpha.MatchPredicate;
      reader.readMessage(value,proto.envoy.service.tap.v2alpha.MatchPredicate.deserializeBinaryFromReader);
      msg.setMatchConfig(value);
      break;
    case 2:
      var value = new proto.envoy.service.tap.v2alpha.OutputConfig;
      reader.readMessage(value,proto.envoy.service.tap.v2alpha.OutputConfig.deserializeBinaryFromReader);
      msg.setOutputConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.tap.v2alpha.TapConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.tap.v2alpha.TapConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.tap.v2alpha.TapConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.tap.v2alpha.TapConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.service.tap.v2alpha.MatchPredicate.serializeBinaryToWriter
    );
  }
  f = message.getOutputConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.service.tap.v2alpha.OutputConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional MatchPredicate match_config = 1;
 * @return {?proto.envoy.service.tap.v2alpha.MatchPredicate}
 */
proto.envoy.service.tap.v2alpha.TapConfig.prototype.getMatchConfig = function() {
  return /** @type{?proto.envoy.service.tap.v2alpha.MatchPredicate} */ (
    jspb.Message.getWrapperField(this, proto.envoy.service.tap.v2alpha.MatchPredicate, 1));
};


/** @param {?proto.envoy.service.tap.v2alpha.MatchPredicate|undefined} value */
proto.envoy.service.tap.v2alpha.TapConfig.prototype.setMatchConfig = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.service.tap.v2alpha.TapConfig.prototype.clearMatchConfig = function() {
  this.setMatchConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.service.tap.v2alpha.TapConfig.prototype.hasMatchConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional OutputConfig output_config = 2;
 * @return {?proto.envoy.service.tap.v2alpha.OutputConfig}
 */
proto.envoy.service.tap.v2alpha.TapConfig.prototype.getOutputConfig = function() {
  return /** @type{?proto.envoy.service.tap.v2alpha.OutputConfig} */ (
    jspb.Message.getWrapperField(this, proto.envoy.service.tap.v2alpha.OutputConfig, 2));
};


/** @param {?proto.envoy.service.tap.v2alpha.OutputConfig|undefined} value */
proto.envoy.service.tap.v2alpha.TapConfig.prototype.setOutputConfig = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.service.tap.v2alpha.TapConfig.prototype.clearOutputConfig = function() {
  this.setOutputConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.service.tap.v2alpha.TapConfig.prototype.hasOutputConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.oneofGroups_ = [[1,2,3,4,5,6,7,8]];

/**
 * @enum {number}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.RuleCase = {
  RULE_NOT_SET: 0,
  OR_MATCH: 1,
  AND_MATCH: 2,
  NOT_MATCH: 3,
  ANY_MATCH: 4,
  HTTP_REQUEST_HEADERS_MATCH: 5,
  HTTP_REQUEST_TRAILERS_MATCH: 6,
  HTTP_RESPONSE_HEADERS_MATCH: 7,
  HTTP_RESPONSE_TRAILERS_MATCH: 8
};

/**
 * @return {proto.envoy.service.tap.v2alpha.MatchPredicate.RuleCase}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.getRuleCase = function() {
  return /** @type {proto.envoy.service.tap.v2alpha.MatchPredicate.RuleCase} */(jspb.Message.computeOneofCase(this, proto.envoy.service.tap.v2alpha.MatchPredicate.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.tap.v2alpha.MatchPredicate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.tap.v2alpha.MatchPredicate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.toObject = function(includeInstance, msg) {
  var f, obj = {
    orMatch: (f = msg.getOrMatch()) && proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet.toObject(includeInstance, f),
    andMatch: (f = msg.getAndMatch()) && proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet.toObject(includeInstance, f),
    notMatch: (f = msg.getNotMatch()) && proto.envoy.service.tap.v2alpha.MatchPredicate.toObject(includeInstance, f),
    anyMatch: jspb.Message.getFieldWithDefault(msg, 4, false),
    httpRequestHeadersMatch: (f = msg.getHttpRequestHeadersMatch()) && proto.envoy.service.tap.v2alpha.HttpHeadersMatch.toObject(includeInstance, f),
    httpRequestTrailersMatch: (f = msg.getHttpRequestTrailersMatch()) && proto.envoy.service.tap.v2alpha.HttpHeadersMatch.toObject(includeInstance, f),
    httpResponseHeadersMatch: (f = msg.getHttpResponseHeadersMatch()) && proto.envoy.service.tap.v2alpha.HttpHeadersMatch.toObject(includeInstance, f),
    httpResponseTrailersMatch: (f = msg.getHttpResponseTrailersMatch()) && proto.envoy.service.tap.v2alpha.HttpHeadersMatch.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.tap.v2alpha.MatchPredicate}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.tap.v2alpha.MatchPredicate;
  return proto.envoy.service.tap.v2alpha.MatchPredicate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.tap.v2alpha.MatchPredicate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.tap.v2alpha.MatchPredicate}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet;
      reader.readMessage(value,proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet.deserializeBinaryFromReader);
      msg.setOrMatch(value);
      break;
    case 2:
      var value = new proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet;
      reader.readMessage(value,proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet.deserializeBinaryFromReader);
      msg.setAndMatch(value);
      break;
    case 3:
      var value = new proto.envoy.service.tap.v2alpha.MatchPredicate;
      reader.readMessage(value,proto.envoy.service.tap.v2alpha.MatchPredicate.deserializeBinaryFromReader);
      msg.setNotMatch(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAnyMatch(value);
      break;
    case 5:
      var value = new proto.envoy.service.tap.v2alpha.HttpHeadersMatch;
      reader.readMessage(value,proto.envoy.service.tap.v2alpha.HttpHeadersMatch.deserializeBinaryFromReader);
      msg.setHttpRequestHeadersMatch(value);
      break;
    case 6:
      var value = new proto.envoy.service.tap.v2alpha.HttpHeadersMatch;
      reader.readMessage(value,proto.envoy.service.tap.v2alpha.HttpHeadersMatch.deserializeBinaryFromReader);
      msg.setHttpRequestTrailersMatch(value);
      break;
    case 7:
      var value = new proto.envoy.service.tap.v2alpha.HttpHeadersMatch;
      reader.readMessage(value,proto.envoy.service.tap.v2alpha.HttpHeadersMatch.deserializeBinaryFromReader);
      msg.setHttpResponseHeadersMatch(value);
      break;
    case 8:
      var value = new proto.envoy.service.tap.v2alpha.HttpHeadersMatch;
      reader.readMessage(value,proto.envoy.service.tap.v2alpha.HttpHeadersMatch.deserializeBinaryFromReader);
      msg.setHttpResponseTrailersMatch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.tap.v2alpha.MatchPredicate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.tap.v2alpha.MatchPredicate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrMatch();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet.serializeBinaryToWriter
    );
  }
  f = message.getAndMatch();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet.serializeBinaryToWriter
    );
  }
  f = message.getNotMatch();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.service.tap.v2alpha.MatchPredicate.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getHttpRequestHeadersMatch();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.envoy.service.tap.v2alpha.HttpHeadersMatch.serializeBinaryToWriter
    );
  }
  f = message.getHttpRequestTrailersMatch();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.envoy.service.tap.v2alpha.HttpHeadersMatch.serializeBinaryToWriter
    );
  }
  f = message.getHttpResponseHeadersMatch();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.envoy.service.tap.v2alpha.HttpHeadersMatch.serializeBinaryToWriter
    );
  }
  f = message.getHttpResponseTrailersMatch();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.envoy.service.tap.v2alpha.HttpHeadersMatch.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    rulesList: jspb.Message.toObjectList(msg.getRulesList(),
    proto.envoy.service.tap.v2alpha.MatchPredicate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet;
  return proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.service.tap.v2alpha.MatchPredicate;
      reader.readMessage(value,proto.envoy.service.tap.v2alpha.MatchPredicate.deserializeBinaryFromReader);
      msg.addRules(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.envoy.service.tap.v2alpha.MatchPredicate.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MatchPredicate rules = 1;
 * @return {!Array<!proto.envoy.service.tap.v2alpha.MatchPredicate>}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet.prototype.getRulesList = function() {
  return /** @type{!Array<!proto.envoy.service.tap.v2alpha.MatchPredicate>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.service.tap.v2alpha.MatchPredicate, 1));
};


/** @param {!Array<!proto.envoy.service.tap.v2alpha.MatchPredicate>} value */
proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet.prototype.setRulesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.envoy.service.tap.v2alpha.MatchPredicate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.service.tap.v2alpha.MatchPredicate}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet.prototype.addRules = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.envoy.service.tap.v2alpha.MatchPredicate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet.prototype.clearRulesList = function() {
  this.setRulesList([]);
};


/**
 * optional MatchSet or_match = 1;
 * @return {?proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.getOrMatch = function() {
  return /** @type{?proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet} */ (
    jspb.Message.getWrapperField(this, proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet, 1));
};


/** @param {?proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet|undefined} value */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.setOrMatch = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.envoy.service.tap.v2alpha.MatchPredicate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.clearOrMatch = function() {
  this.setOrMatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.hasOrMatch = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MatchSet and_match = 2;
 * @return {?proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.getAndMatch = function() {
  return /** @type{?proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet} */ (
    jspb.Message.getWrapperField(this, proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet, 2));
};


/** @param {?proto.envoy.service.tap.v2alpha.MatchPredicate.MatchSet|undefined} value */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.setAndMatch = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.envoy.service.tap.v2alpha.MatchPredicate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.clearAndMatch = function() {
  this.setAndMatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.hasAndMatch = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional MatchPredicate not_match = 3;
 * @return {?proto.envoy.service.tap.v2alpha.MatchPredicate}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.getNotMatch = function() {
  return /** @type{?proto.envoy.service.tap.v2alpha.MatchPredicate} */ (
    jspb.Message.getWrapperField(this, proto.envoy.service.tap.v2alpha.MatchPredicate, 3));
};


/** @param {?proto.envoy.service.tap.v2alpha.MatchPredicate|undefined} value */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.setNotMatch = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.envoy.service.tap.v2alpha.MatchPredicate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.clearNotMatch = function() {
  this.setNotMatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.hasNotMatch = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool any_match = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.getAnyMatch = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.setAnyMatch = function(value) {
  jspb.Message.setOneofField(this, 4, proto.envoy.service.tap.v2alpha.MatchPredicate.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.clearAnyMatch = function() {
  jspb.Message.setOneofField(this, 4, proto.envoy.service.tap.v2alpha.MatchPredicate.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.hasAnyMatch = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional HttpHeadersMatch http_request_headers_match = 5;
 * @return {?proto.envoy.service.tap.v2alpha.HttpHeadersMatch}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.getHttpRequestHeadersMatch = function() {
  return /** @type{?proto.envoy.service.tap.v2alpha.HttpHeadersMatch} */ (
    jspb.Message.getWrapperField(this, proto.envoy.service.tap.v2alpha.HttpHeadersMatch, 5));
};


/** @param {?proto.envoy.service.tap.v2alpha.HttpHeadersMatch|undefined} value */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.setHttpRequestHeadersMatch = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.envoy.service.tap.v2alpha.MatchPredicate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.clearHttpRequestHeadersMatch = function() {
  this.setHttpRequestHeadersMatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.hasHttpRequestHeadersMatch = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional HttpHeadersMatch http_request_trailers_match = 6;
 * @return {?proto.envoy.service.tap.v2alpha.HttpHeadersMatch}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.getHttpRequestTrailersMatch = function() {
  return /** @type{?proto.envoy.service.tap.v2alpha.HttpHeadersMatch} */ (
    jspb.Message.getWrapperField(this, proto.envoy.service.tap.v2alpha.HttpHeadersMatch, 6));
};


/** @param {?proto.envoy.service.tap.v2alpha.HttpHeadersMatch|undefined} value */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.setHttpRequestTrailersMatch = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.envoy.service.tap.v2alpha.MatchPredicate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.clearHttpRequestTrailersMatch = function() {
  this.setHttpRequestTrailersMatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.hasHttpRequestTrailersMatch = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional HttpHeadersMatch http_response_headers_match = 7;
 * @return {?proto.envoy.service.tap.v2alpha.HttpHeadersMatch}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.getHttpResponseHeadersMatch = function() {
  return /** @type{?proto.envoy.service.tap.v2alpha.HttpHeadersMatch} */ (
    jspb.Message.getWrapperField(this, proto.envoy.service.tap.v2alpha.HttpHeadersMatch, 7));
};


/** @param {?proto.envoy.service.tap.v2alpha.HttpHeadersMatch|undefined} value */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.setHttpResponseHeadersMatch = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.envoy.service.tap.v2alpha.MatchPredicate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.clearHttpResponseHeadersMatch = function() {
  this.setHttpResponseHeadersMatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.hasHttpResponseHeadersMatch = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional HttpHeadersMatch http_response_trailers_match = 8;
 * @return {?proto.envoy.service.tap.v2alpha.HttpHeadersMatch}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.getHttpResponseTrailersMatch = function() {
  return /** @type{?proto.envoy.service.tap.v2alpha.HttpHeadersMatch} */ (
    jspb.Message.getWrapperField(this, proto.envoy.service.tap.v2alpha.HttpHeadersMatch, 8));
};


/** @param {?proto.envoy.service.tap.v2alpha.HttpHeadersMatch|undefined} value */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.setHttpResponseTrailersMatch = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.envoy.service.tap.v2alpha.MatchPredicate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.clearHttpResponseTrailersMatch = function() {
  this.setHttpResponseTrailersMatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.service.tap.v2alpha.MatchPredicate.prototype.hasHttpResponseTrailersMatch = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.service.tap.v2alpha.HttpHeadersMatch.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.tap.v2alpha.HttpHeadersMatch.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.tap.v2alpha.HttpHeadersMatch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.tap.v2alpha.HttpHeadersMatch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.tap.v2alpha.HttpHeadersMatch.toObject = function(includeInstance, msg) {
  var f, obj = {
    headersList: jspb.Message.toObjectList(msg.getHeadersList(),
    envoy_api_v2_route_route_pb.HeaderMatcher.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.tap.v2alpha.HttpHeadersMatch}
 */
proto.envoy.service.tap.v2alpha.HttpHeadersMatch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.tap.v2alpha.HttpHeadersMatch;
  return proto.envoy.service.tap.v2alpha.HttpHeadersMatch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.tap.v2alpha.HttpHeadersMatch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.tap.v2alpha.HttpHeadersMatch}
 */
proto.envoy.service.tap.v2alpha.HttpHeadersMatch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new envoy_api_v2_route_route_pb.HeaderMatcher;
      reader.readMessage(value,envoy_api_v2_route_route_pb.HeaderMatcher.deserializeBinaryFromReader);
      msg.addHeaders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.tap.v2alpha.HttpHeadersMatch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.tap.v2alpha.HttpHeadersMatch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.tap.v2alpha.HttpHeadersMatch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.tap.v2alpha.HttpHeadersMatch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeadersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      envoy_api_v2_route_route_pb.HeaderMatcher.serializeBinaryToWriter
    );
  }
};


/**
 * repeated envoy.api.v2.route.HeaderMatcher headers = 1;
 * @return {!Array<!proto.envoy.api.v2.route.HeaderMatcher>}
 */
proto.envoy.service.tap.v2alpha.HttpHeadersMatch.prototype.getHeadersList = function() {
  return /** @type{!Array<!proto.envoy.api.v2.route.HeaderMatcher>} */ (
    jspb.Message.getRepeatedWrapperField(this, envoy_api_v2_route_route_pb.HeaderMatcher, 1));
};


/** @param {!Array<!proto.envoy.api.v2.route.HeaderMatcher>} value */
proto.envoy.service.tap.v2alpha.HttpHeadersMatch.prototype.setHeadersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.envoy.api.v2.route.HeaderMatcher=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.route.HeaderMatcher}
 */
proto.envoy.service.tap.v2alpha.HttpHeadersMatch.prototype.addHeaders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.envoy.api.v2.route.HeaderMatcher, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.envoy.service.tap.v2alpha.HttpHeadersMatch.prototype.clearHeadersList = function() {
  this.setHeadersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.service.tap.v2alpha.OutputConfig.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.tap.v2alpha.OutputConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.tap.v2alpha.OutputConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.tap.v2alpha.OutputConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.tap.v2alpha.OutputConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    sinksList: jspb.Message.toObjectList(msg.getSinksList(),
    proto.envoy.service.tap.v2alpha.OutputSink.toObject, includeInstance),
    maxBufferedRxBytes: (f = msg.getMaxBufferedRxBytes()) && google_protobuf_wrappers_pb.UInt32Value.toObject(includeInstance, f),
    maxBufferedTxBytes: (f = msg.getMaxBufferedTxBytes()) && google_protobuf_wrappers_pb.UInt32Value.toObject(includeInstance, f),
    streaming: jspb.Message.getFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.tap.v2alpha.OutputConfig}
 */
proto.envoy.service.tap.v2alpha.OutputConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.tap.v2alpha.OutputConfig;
  return proto.envoy.service.tap.v2alpha.OutputConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.tap.v2alpha.OutputConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.tap.v2alpha.OutputConfig}
 */
proto.envoy.service.tap.v2alpha.OutputConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.service.tap.v2alpha.OutputSink;
      reader.readMessage(value,proto.envoy.service.tap.v2alpha.OutputSink.deserializeBinaryFromReader);
      msg.addSinks(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.UInt32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt32Value.deserializeBinaryFromReader);
      msg.setMaxBufferedRxBytes(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.UInt32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt32Value.deserializeBinaryFromReader);
      msg.setMaxBufferedTxBytes(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStreaming(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.tap.v2alpha.OutputConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.tap.v2alpha.OutputConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.tap.v2alpha.OutputConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.tap.v2alpha.OutputConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSinksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.envoy.service.tap.v2alpha.OutputSink.serializeBinaryToWriter
    );
  }
  f = message.getMaxBufferedRxBytes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getMaxBufferedTxBytes();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.UInt32Value.serializeBinaryToWriter
    );
  }
  f = message.getStreaming();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * repeated OutputSink sinks = 1;
 * @return {!Array<!proto.envoy.service.tap.v2alpha.OutputSink>}
 */
proto.envoy.service.tap.v2alpha.OutputConfig.prototype.getSinksList = function() {
  return /** @type{!Array<!proto.envoy.service.tap.v2alpha.OutputSink>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.service.tap.v2alpha.OutputSink, 1));
};


/** @param {!Array<!proto.envoy.service.tap.v2alpha.OutputSink>} value */
proto.envoy.service.tap.v2alpha.OutputConfig.prototype.setSinksList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.envoy.service.tap.v2alpha.OutputSink=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.service.tap.v2alpha.OutputSink}
 */
proto.envoy.service.tap.v2alpha.OutputConfig.prototype.addSinks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.envoy.service.tap.v2alpha.OutputSink, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.envoy.service.tap.v2alpha.OutputConfig.prototype.clearSinksList = function() {
  this.setSinksList([]);
};


/**
 * optional google.protobuf.UInt32Value max_buffered_rx_bytes = 2;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.service.tap.v2alpha.OutputConfig.prototype.getMaxBufferedRxBytes = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt32Value, 2));
};


/** @param {?proto.google.protobuf.UInt32Value|undefined} value */
proto.envoy.service.tap.v2alpha.OutputConfig.prototype.setMaxBufferedRxBytes = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.service.tap.v2alpha.OutputConfig.prototype.clearMaxBufferedRxBytes = function() {
  this.setMaxBufferedRxBytes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.service.tap.v2alpha.OutputConfig.prototype.hasMaxBufferedRxBytes = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.UInt32Value max_buffered_tx_bytes = 3;
 * @return {?proto.google.protobuf.UInt32Value}
 */
proto.envoy.service.tap.v2alpha.OutputConfig.prototype.getMaxBufferedTxBytes = function() {
  return /** @type{?proto.google.protobuf.UInt32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt32Value, 3));
};


/** @param {?proto.google.protobuf.UInt32Value|undefined} value */
proto.envoy.service.tap.v2alpha.OutputConfig.prototype.setMaxBufferedTxBytes = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.service.tap.v2alpha.OutputConfig.prototype.clearMaxBufferedTxBytes = function() {
  this.setMaxBufferedTxBytes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.service.tap.v2alpha.OutputConfig.prototype.hasMaxBufferedTxBytes = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool streaming = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.envoy.service.tap.v2alpha.OutputConfig.prototype.getStreaming = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.envoy.service.tap.v2alpha.OutputConfig.prototype.setStreaming = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.service.tap.v2alpha.OutputSink.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.envoy.service.tap.v2alpha.OutputSink.OutputSinkTypeCase = {
  OUTPUT_SINK_TYPE_NOT_SET: 0,
  STREAMING_ADMIN: 2,
  FILE_PER_TAP: 3
};

/**
 * @return {proto.envoy.service.tap.v2alpha.OutputSink.OutputSinkTypeCase}
 */
proto.envoy.service.tap.v2alpha.OutputSink.prototype.getOutputSinkTypeCase = function() {
  return /** @type {proto.envoy.service.tap.v2alpha.OutputSink.OutputSinkTypeCase} */(jspb.Message.computeOneofCase(this, proto.envoy.service.tap.v2alpha.OutputSink.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.tap.v2alpha.OutputSink.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.tap.v2alpha.OutputSink.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.tap.v2alpha.OutputSink} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.tap.v2alpha.OutputSink.toObject = function(includeInstance, msg) {
  var f, obj = {
    format: jspb.Message.getFieldWithDefault(msg, 1, 0),
    streamingAdmin: (f = msg.getStreamingAdmin()) && proto.envoy.service.tap.v2alpha.StreamingAdminSink.toObject(includeInstance, f),
    filePerTap: (f = msg.getFilePerTap()) && proto.envoy.service.tap.v2alpha.FilePerTapSink.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.tap.v2alpha.OutputSink}
 */
proto.envoy.service.tap.v2alpha.OutputSink.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.tap.v2alpha.OutputSink;
  return proto.envoy.service.tap.v2alpha.OutputSink.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.tap.v2alpha.OutputSink} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.tap.v2alpha.OutputSink}
 */
proto.envoy.service.tap.v2alpha.OutputSink.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.envoy.service.tap.v2alpha.OutputSink.Format} */ (reader.readEnum());
      msg.setFormat(value);
      break;
    case 2:
      var value = new proto.envoy.service.tap.v2alpha.StreamingAdminSink;
      reader.readMessage(value,proto.envoy.service.tap.v2alpha.StreamingAdminSink.deserializeBinaryFromReader);
      msg.setStreamingAdmin(value);
      break;
    case 3:
      var value = new proto.envoy.service.tap.v2alpha.FilePerTapSink;
      reader.readMessage(value,proto.envoy.service.tap.v2alpha.FilePerTapSink.deserializeBinaryFromReader);
      msg.setFilePerTap(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.tap.v2alpha.OutputSink.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.tap.v2alpha.OutputSink.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.tap.v2alpha.OutputSink} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.tap.v2alpha.OutputSink.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFormat();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getStreamingAdmin();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.service.tap.v2alpha.StreamingAdminSink.serializeBinaryToWriter
    );
  }
  f = message.getFilePerTap();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.service.tap.v2alpha.FilePerTapSink.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.envoy.service.tap.v2alpha.OutputSink.Format = {
  JSON_BODY_AS_BYTES: 0,
  JSON_BODY_AS_STRING: 1,
  PROTO_BINARY: 2,
  PROTO_BINARY_LENGTH_DELIMITED: 3,
  PROTO_TEXT: 4
};

/**
 * optional Format format = 1;
 * @return {!proto.envoy.service.tap.v2alpha.OutputSink.Format}
 */
proto.envoy.service.tap.v2alpha.OutputSink.prototype.getFormat = function() {
  return /** @type {!proto.envoy.service.tap.v2alpha.OutputSink.Format} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.envoy.service.tap.v2alpha.OutputSink.Format} value */
proto.envoy.service.tap.v2alpha.OutputSink.prototype.setFormat = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional StreamingAdminSink streaming_admin = 2;
 * @return {?proto.envoy.service.tap.v2alpha.StreamingAdminSink}
 */
proto.envoy.service.tap.v2alpha.OutputSink.prototype.getStreamingAdmin = function() {
  return /** @type{?proto.envoy.service.tap.v2alpha.StreamingAdminSink} */ (
    jspb.Message.getWrapperField(this, proto.envoy.service.tap.v2alpha.StreamingAdminSink, 2));
};


/** @param {?proto.envoy.service.tap.v2alpha.StreamingAdminSink|undefined} value */
proto.envoy.service.tap.v2alpha.OutputSink.prototype.setStreamingAdmin = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.envoy.service.tap.v2alpha.OutputSink.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.service.tap.v2alpha.OutputSink.prototype.clearStreamingAdmin = function() {
  this.setStreamingAdmin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.service.tap.v2alpha.OutputSink.prototype.hasStreamingAdmin = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FilePerTapSink file_per_tap = 3;
 * @return {?proto.envoy.service.tap.v2alpha.FilePerTapSink}
 */
proto.envoy.service.tap.v2alpha.OutputSink.prototype.getFilePerTap = function() {
  return /** @type{?proto.envoy.service.tap.v2alpha.FilePerTapSink} */ (
    jspb.Message.getWrapperField(this, proto.envoy.service.tap.v2alpha.FilePerTapSink, 3));
};


/** @param {?proto.envoy.service.tap.v2alpha.FilePerTapSink|undefined} value */
proto.envoy.service.tap.v2alpha.OutputSink.prototype.setFilePerTap = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.envoy.service.tap.v2alpha.OutputSink.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.service.tap.v2alpha.OutputSink.prototype.clearFilePerTap = function() {
  this.setFilePerTap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.service.tap.v2alpha.OutputSink.prototype.hasFilePerTap = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.tap.v2alpha.StreamingAdminSink.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.tap.v2alpha.StreamingAdminSink.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.tap.v2alpha.StreamingAdminSink} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.tap.v2alpha.StreamingAdminSink.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.tap.v2alpha.StreamingAdminSink}
 */
proto.envoy.service.tap.v2alpha.StreamingAdminSink.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.tap.v2alpha.StreamingAdminSink;
  return proto.envoy.service.tap.v2alpha.StreamingAdminSink.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.tap.v2alpha.StreamingAdminSink} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.tap.v2alpha.StreamingAdminSink}
 */
proto.envoy.service.tap.v2alpha.StreamingAdminSink.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.tap.v2alpha.StreamingAdminSink.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.tap.v2alpha.StreamingAdminSink.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.tap.v2alpha.StreamingAdminSink} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.tap.v2alpha.StreamingAdminSink.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.service.tap.v2alpha.FilePerTapSink.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.service.tap.v2alpha.FilePerTapSink.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.service.tap.v2alpha.FilePerTapSink} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.tap.v2alpha.FilePerTapSink.toObject = function(includeInstance, msg) {
  var f, obj = {
    pathPrefix: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.service.tap.v2alpha.FilePerTapSink}
 */
proto.envoy.service.tap.v2alpha.FilePerTapSink.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.service.tap.v2alpha.FilePerTapSink;
  return proto.envoy.service.tap.v2alpha.FilePerTapSink.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.service.tap.v2alpha.FilePerTapSink} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.service.tap.v2alpha.FilePerTapSink}
 */
proto.envoy.service.tap.v2alpha.FilePerTapSink.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPathPrefix(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.service.tap.v2alpha.FilePerTapSink.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.service.tap.v2alpha.FilePerTapSink.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.service.tap.v2alpha.FilePerTapSink} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.service.tap.v2alpha.FilePerTapSink.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPathPrefix();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string path_prefix = 1;
 * @return {string}
 */
proto.envoy.service.tap.v2alpha.FilePerTapSink.prototype.getPathPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.envoy.service.tap.v2alpha.FilePerTapSink.prototype.setPathPrefix = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.envoy.service.tap.v2alpha);
