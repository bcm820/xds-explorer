/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var envoy_api_v2_route_route_pb = require('./envoy/api/v2/route/route_pb.js');
goog.object.extend(proto, envoy_api_v2_route_route_pb);
var envoy_type_matcher_string_pb = require('./envoy/type/matcher/string_pb.js');
goog.object.extend(proto, envoy_type_matcher_string_pb);
var envoy_type_range_pb = require('./envoy/type/range_pb.js');
goog.object.extend(proto, envoy_type_range_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var validate_validate_pb = require('./validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
var gogoproto_gogo_pb = require('./gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
goog.exportSymbol('proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch', null, global);
goog.exportSymbol('proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier', null, global);
goog.exportSymbol('proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route', null, global);
goog.exportSymbol('proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction', null, global);
goog.exportSymbol('proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration', null, global);
goog.exportSymbol('proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.repeatedFields_, null);
};
goog.inherits(proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.displayName = 'proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route.displayName = 'proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch.repeatedFields_, null);
};
goog.inherits(proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch.displayName = 'proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.oneofGroups_);
};
goog.inherits(proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.displayName = 'proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.displayName = 'proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.oneofGroups_);
};
goog.inherits(proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.displayName = 'proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pb_interface: jspb.Message.getFieldWithDefault(msg, 2, ""),
    group: jspb.Message.getFieldWithDefault(msg, 3, ""),
    version: jspb.Message.getFieldWithDefault(msg, 4, ""),
    routesList: jspb.Message.toObjectList(msg.getRoutesList(),
    proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration;
  return proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInterface(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroup(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 5:
      var value = new proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route;
      reader.readMessage(value,proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route.deserializeBinaryFromReader);
      msg.addRoutes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInterface();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGroup();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRoutesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string interface = 2;
 * @return {string}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.prototype.getInterface = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.prototype.setInterface = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string group = 3;
 * @return {string}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.prototype.getGroup = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.prototype.setGroup = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string version = 4;
 * @return {string}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.prototype.setVersion = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated Route routes = 5;
 * @return {!Array<!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route>}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.prototype.getRoutesList = function() {
  return /** @type{!Array<!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route, 5));
};


/** @param {!Array<!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route>} value */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.prototype.setRoutesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.prototype.addRoutes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration.prototype.clearRoutesList = function() {
  this.setRoutesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route.toObject = function(includeInstance, msg) {
  var f, obj = {
    match: (f = msg.getMatch()) && proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch.toObject(includeInstance, f),
    route: (f = msg.getRoute()) && proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route;
  return proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch;
      reader.readMessage(value,proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch.deserializeBinaryFromReader);
      msg.setMatch(value);
      break;
    case 2:
      var value = new proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction;
      reader.readMessage(value,proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.deserializeBinaryFromReader);
      msg.setRoute(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatch();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch.serializeBinaryToWriter
    );
  }
  f = message.getRoute();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.serializeBinaryToWriter
    );
  }
};


/**
 * optional RouteMatch match = 1;
 * @return {?proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route.prototype.getMatch = function() {
  return /** @type{?proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch, 1));
};


/** @param {?proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch|undefined} value */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route.prototype.setMatch = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route.prototype.clearMatch = function() {
  this.setMatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route.prototype.hasMatch = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RouteAction route = 2;
 * @return {?proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route.prototype.getRoute = function() {
  return /** @type{?proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction, 2));
};


/** @param {?proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction|undefined} value */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route.prototype.setRoute = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route.prototype.clearRoute = function() {
  this.setRoute(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.Route.prototype.hasRoute = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch.toObject = function(includeInstance, msg) {
  var f, obj = {
    method: (f = msg.getMethod()) && proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.toObject(includeInstance, f),
    headersList: jspb.Message.toObjectList(msg.getHeadersList(),
    envoy_api_v2_route_route_pb.HeaderMatcher.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch;
  return proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch;
      reader.readMessage(value,proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.deserializeBinaryFromReader);
      msg.setMethod(value);
      break;
    case 2:
      var value = new envoy_api_v2_route_route_pb.HeaderMatcher;
      reader.readMessage(value,envoy_api_v2_route_route_pb.HeaderMatcher.deserializeBinaryFromReader);
      msg.addHeaders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMethod();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.serializeBinaryToWriter
    );
  }
  f = message.getHeadersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      envoy_api_v2_route_route_pb.HeaderMatcher.serializeBinaryToWriter
    );
  }
};


/**
 * optional MethodMatch method = 1;
 * @return {?proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch.prototype.getMethod = function() {
  return /** @type{?proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch, 1));
};


/** @param {?proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch|undefined} value */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch.prototype.setMethod = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch.prototype.clearMethod = function() {
  this.setMethod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch.prototype.hasMethod = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated envoy.api.v2.route.HeaderMatcher headers = 2;
 * @return {!Array<!proto.envoy.api.v2.route.HeaderMatcher>}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch.prototype.getHeadersList = function() {
  return /** @type{!Array<!proto.envoy.api.v2.route.HeaderMatcher>} */ (
    jspb.Message.getRepeatedWrapperField(this, envoy_api_v2_route_route_pb.HeaderMatcher, 2));
};


/** @param {!Array<!proto.envoy.api.v2.route.HeaderMatcher>} value */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch.prototype.setHeadersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.envoy.api.v2.route.HeaderMatcher=} opt_value
 * @param {number=} opt_index
 * @return {!proto.envoy.api.v2.route.HeaderMatcher}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch.prototype.addHeaders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.envoy.api.v2.route.HeaderMatcher, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch.prototype.clearHeadersList = function() {
  this.setHeadersList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.ClusterSpecifierCase = {
  CLUSTER_SPECIFIER_NOT_SET: 0,
  CLUSTER: 1,
  WEIGHTED_CLUSTERS: 2
};

/**
 * @return {proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.ClusterSpecifierCase}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.prototype.getClusterSpecifierCase = function() {
  return /** @type {proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.ClusterSpecifierCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    cluster: jspb.Message.getFieldWithDefault(msg, 1, ""),
    weightedClusters: (f = msg.getWeightedClusters()) && envoy_api_v2_route_route_pb.WeightedCluster.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction;
  return proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCluster(value);
      break;
    case 2:
      var value = new envoy_api_v2_route_route_pb.WeightedCluster;
      reader.readMessage(value,envoy_api_v2_route_route_pb.WeightedCluster.deserializeBinaryFromReader);
      msg.setWeightedClusters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWeightedClusters();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      envoy_api_v2_route_route_pb.WeightedCluster.serializeBinaryToWriter
    );
  }
};


/**
 * optional string cluster = 1;
 * @return {string}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.prototype.getCluster = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.prototype.setCluster = function(value) {
  jspb.Message.setOneofField(this, 1, proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.prototype.clearCluster = function() {
  jspb.Message.setOneofField(this, 1, proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.prototype.hasCluster = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional envoy.api.v2.route.WeightedCluster weighted_clusters = 2;
 * @return {?proto.envoy.api.v2.route.WeightedCluster}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.prototype.getWeightedClusters = function() {
  return /** @type{?proto.envoy.api.v2.route.WeightedCluster} */ (
    jspb.Message.getWrapperField(this, envoy_api_v2_route_route_pb.WeightedCluster, 2));
};


/** @param {?proto.envoy.api.v2.route.WeightedCluster|undefined} value */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.prototype.setWeightedClusters = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.prototype.clearWeightedClusters = function() {
  this.setWeightedClusters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction.prototype.hasWeightedClusters = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = msg.getName()) && envoy_type_matcher_string_pb.StringMatcher.toObject(includeInstance, f),
    paramsMatchMap: (f = msg.getParamsMatchMap()) ? f.toObject(includeInstance, proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch;
  return proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new envoy_type_matcher_string_pb.StringMatcher;
      reader.readMessage(value,envoy_type_matcher_string_pb.StringMatcher.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 2:
      var value = msg.getParamsMatchMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.deserializeBinaryFromReader, 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      envoy_type_matcher_string_pb.StringMatcher.serializeBinaryToWriter
    );
  }
  f = message.getParamsMatchMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.serializeBinaryToWriter);
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.ParameterMatchSpecifierCase = {
  PARAMETER_MATCH_SPECIFIER_NOT_SET: 0,
  EXACT_MATCH: 3,
  RANGE_MATCH: 4
};

/**
 * @return {proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.ParameterMatchSpecifierCase}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.prototype.getParameterMatchSpecifierCase = function() {
  return /** @type {proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.ParameterMatchSpecifierCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.toObject = function(includeInstance, msg) {
  var f, obj = {
    exactMatch: jspb.Message.getFieldWithDefault(msg, 3, ""),
    rangeMatch: (f = msg.getRangeMatch()) && envoy_type_range_pb.Int64Range.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier;
  return proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExactMatch(value);
      break;
    case 4:
      var value = new envoy_type_range_pb.Int64Range;
      reader.readMessage(value,envoy_type_range_pb.Int64Range.deserializeBinaryFromReader);
      msg.setRangeMatch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRangeMatch();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      envoy_type_range_pb.Int64Range.serializeBinaryToWriter
    );
  }
};


/**
 * optional string exact_match = 3;
 * @return {string}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.prototype.getExactMatch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.prototype.setExactMatch = function(value) {
  jspb.Message.setOneofField(this, 3, proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.prototype.clearExactMatch = function() {
  jspb.Message.setOneofField(this, 3, proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.prototype.hasExactMatch = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional envoy.type.Int64Range range_match = 4;
 * @return {?proto.envoy.type.Int64Range}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.prototype.getRangeMatch = function() {
  return /** @type{?proto.envoy.type.Int64Range} */ (
    jspb.Message.getWrapperField(this, envoy_type_range_pb.Int64Range, 4));
};


/** @param {?proto.envoy.type.Int64Range|undefined} value */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.prototype.setRangeMatch = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.prototype.clearRangeMatch = function() {
  this.setRangeMatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier.prototype.hasRangeMatch = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional envoy.type.matcher.StringMatcher name = 1;
 * @return {?proto.envoy.type.matcher.StringMatcher}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.prototype.getName = function() {
  return /** @type{?proto.envoy.type.matcher.StringMatcher} */ (
    jspb.Message.getWrapperField(this, envoy_type_matcher_string_pb.StringMatcher, 1));
};


/** @param {?proto.envoy.type.matcher.StringMatcher|undefined} value */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.prototype.setName = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.prototype.clearName = function() {
  this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<uint32, ParameterMatchSpecifier> params_match = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier>}
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.prototype.getParamsMatchMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.prototype.clearParamsMatchMap = function() {
  this.getParamsMatchMap().clear();
};


goog.object.extend(exports, proto.envoy.config.filter.network.dubbo_proxy.v2alpha1);
