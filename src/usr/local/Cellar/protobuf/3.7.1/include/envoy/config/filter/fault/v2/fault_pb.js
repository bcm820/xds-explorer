/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var envoy_type_percent_pb = require('./envoy/type/percent_pb.js');
goog.object.extend(proto, envoy_type_percent_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var validate_validate_pb = require('./validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
var gogoproto_gogo_pb = require('./gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
goog.exportSymbol('proto.envoy.config.filter.fault.v2.FaultDelay', null, global);
goog.exportSymbol('proto.envoy.config.filter.fault.v2.FaultDelay.FaultDelayType', null, global);
goog.exportSymbol('proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay', null, global);
goog.exportSymbol('proto.envoy.config.filter.fault.v2.FaultRateLimit', null, global);
goog.exportSymbol('proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit', null, global);
goog.exportSymbol('proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.fault.v2.FaultDelay = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.config.filter.fault.v2.FaultDelay.oneofGroups_);
};
goog.inherits(proto.envoy.config.filter.fault.v2.FaultDelay, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.filter.fault.v2.FaultDelay.displayName = 'proto.envoy.config.filter.fault.v2.FaultDelay';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay.displayName = 'proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.envoy.config.filter.fault.v2.FaultRateLimit.oneofGroups_);
};
goog.inherits(proto.envoy.config.filter.fault.v2.FaultRateLimit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.filter.fault.v2.FaultRateLimit.displayName = 'proto.envoy.config.filter.fault.v2.FaultRateLimit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit.displayName = 'proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit.displayName = 'proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.filter.fault.v2.FaultDelay.oneofGroups_ = [[3,5]];

/**
 * @enum {number}
 */
proto.envoy.config.filter.fault.v2.FaultDelay.FaultDelaySecifierCase = {
  FAULT_DELAY_SECIFIER_NOT_SET: 0,
  FIXED_DELAY: 3,
  HEADER_DELAY: 5
};

/**
 * @return {proto.envoy.config.filter.fault.v2.FaultDelay.FaultDelaySecifierCase}
 */
proto.envoy.config.filter.fault.v2.FaultDelay.prototype.getFaultDelaySecifierCase = function() {
  return /** @type {proto.envoy.config.filter.fault.v2.FaultDelay.FaultDelaySecifierCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.filter.fault.v2.FaultDelay.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.fault.v2.FaultDelay.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.fault.v2.FaultDelay.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.fault.v2.FaultDelay} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.fault.v2.FaultDelay.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    fixedDelay: (f = msg.getFixedDelay()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    headerDelay: (f = msg.getHeaderDelay()) && proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay.toObject(includeInstance, f),
    percentage: (f = msg.getPercentage()) && envoy_type_percent_pb.FractionalPercent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.fault.v2.FaultDelay}
 */
proto.envoy.config.filter.fault.v2.FaultDelay.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.fault.v2.FaultDelay;
  return proto.envoy.config.filter.fault.v2.FaultDelay.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.fault.v2.FaultDelay} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.fault.v2.FaultDelay}
 */
proto.envoy.config.filter.fault.v2.FaultDelay.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.envoy.config.filter.fault.v2.FaultDelay.FaultDelayType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setFixedDelay(value);
      break;
    case 5:
      var value = new proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay;
      reader.readMessage(value,proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay.deserializeBinaryFromReader);
      msg.setHeaderDelay(value);
      break;
    case 4:
      var value = new envoy_type_percent_pb.FractionalPercent;
      reader.readMessage(value,envoy_type_percent_pb.FractionalPercent.deserializeBinaryFromReader);
      msg.setPercentage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.fault.v2.FaultDelay.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.fault.v2.FaultDelay.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.fault.v2.FaultDelay} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.fault.v2.FaultDelay.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getFixedDelay();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getHeaderDelay();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay.serializeBinaryToWriter
    );
  }
  f = message.getPercentage();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      envoy_type_percent_pb.FractionalPercent.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.envoy.config.filter.fault.v2.FaultDelay.FaultDelayType = {
  FIXED: 0
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay}
 */
proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay;
  return proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay}
 */
proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional FaultDelayType type = 1;
 * @return {!proto.envoy.config.filter.fault.v2.FaultDelay.FaultDelayType}
 */
proto.envoy.config.filter.fault.v2.FaultDelay.prototype.getType = function() {
  return /** @type {!proto.envoy.config.filter.fault.v2.FaultDelay.FaultDelayType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.envoy.config.filter.fault.v2.FaultDelay.FaultDelayType} value */
proto.envoy.config.filter.fault.v2.FaultDelay.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional google.protobuf.Duration fixed_delay = 3;
 * @return {?proto.google.protobuf.Duration}
 */
proto.envoy.config.filter.fault.v2.FaultDelay.prototype.getFixedDelay = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 3));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.envoy.config.filter.fault.v2.FaultDelay.prototype.setFixedDelay = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.envoy.config.filter.fault.v2.FaultDelay.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.config.filter.fault.v2.FaultDelay.prototype.clearFixedDelay = function() {
  this.setFixedDelay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.filter.fault.v2.FaultDelay.prototype.hasFixedDelay = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional HeaderDelay header_delay = 5;
 * @return {?proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay}
 */
proto.envoy.config.filter.fault.v2.FaultDelay.prototype.getHeaderDelay = function() {
  return /** @type{?proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay, 5));
};


/** @param {?proto.envoy.config.filter.fault.v2.FaultDelay.HeaderDelay|undefined} value */
proto.envoy.config.filter.fault.v2.FaultDelay.prototype.setHeaderDelay = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.envoy.config.filter.fault.v2.FaultDelay.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.config.filter.fault.v2.FaultDelay.prototype.clearHeaderDelay = function() {
  this.setHeaderDelay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.filter.fault.v2.FaultDelay.prototype.hasHeaderDelay = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional envoy.type.FractionalPercent percentage = 4;
 * @return {?proto.envoy.type.FractionalPercent}
 */
proto.envoy.config.filter.fault.v2.FaultDelay.prototype.getPercentage = function() {
  return /** @type{?proto.envoy.type.FractionalPercent} */ (
    jspb.Message.getWrapperField(this, envoy_type_percent_pb.FractionalPercent, 4));
};


/** @param {?proto.envoy.type.FractionalPercent|undefined} value */
proto.envoy.config.filter.fault.v2.FaultDelay.prototype.setPercentage = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.config.filter.fault.v2.FaultDelay.prototype.clearPercentage = function() {
  this.setPercentage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.filter.fault.v2.FaultDelay.prototype.hasPercentage = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.oneofGroups_ = [[1,3]];

/**
 * @enum {number}
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.LimitTypeCase = {
  LIMIT_TYPE_NOT_SET: 0,
  FIXED_LIMIT: 1,
  HEADER_LIMIT: 3
};

/**
 * @return {proto.envoy.config.filter.fault.v2.FaultRateLimit.LimitTypeCase}
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.prototype.getLimitTypeCase = function() {
  return /** @type {proto.envoy.config.filter.fault.v2.FaultRateLimit.LimitTypeCase} */(jspb.Message.computeOneofCase(this, proto.envoy.config.filter.fault.v2.FaultRateLimit.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.fault.v2.FaultRateLimit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.fault.v2.FaultRateLimit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.toObject = function(includeInstance, msg) {
  var f, obj = {
    fixedLimit: (f = msg.getFixedLimit()) && proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit.toObject(includeInstance, f),
    headerLimit: (f = msg.getHeaderLimit()) && proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit.toObject(includeInstance, f),
    percentage: (f = msg.getPercentage()) && envoy_type_percent_pb.FractionalPercent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.fault.v2.FaultRateLimit}
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.fault.v2.FaultRateLimit;
  return proto.envoy.config.filter.fault.v2.FaultRateLimit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.fault.v2.FaultRateLimit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.fault.v2.FaultRateLimit}
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit;
      reader.readMessage(value,proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit.deserializeBinaryFromReader);
      msg.setFixedLimit(value);
      break;
    case 3:
      var value = new proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit;
      reader.readMessage(value,proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit.deserializeBinaryFromReader);
      msg.setHeaderLimit(value);
      break;
    case 2:
      var value = new envoy_type_percent_pb.FractionalPercent;
      reader.readMessage(value,envoy_type_percent_pb.FractionalPercent.deserializeBinaryFromReader);
      msg.setPercentage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.fault.v2.FaultRateLimit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.fault.v2.FaultRateLimit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFixedLimit();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit.serializeBinaryToWriter
    );
  }
  f = message.getHeaderLimit();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit.serializeBinaryToWriter
    );
  }
  f = message.getPercentage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      envoy_type_percent_pb.FractionalPercent.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit.toObject = function(includeInstance, msg) {
  var f, obj = {
    limitKbps: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit}
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit;
  return proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit}
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLimitKbps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimitKbps();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 limit_kbps = 1;
 * @return {number}
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit.prototype.getLimitKbps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit.prototype.setLimitKbps = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit.prototype.toObject = function(opt_includeInstance) {
  return proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit}
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit;
  return proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit}
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional FixedLimit fixed_limit = 1;
 * @return {?proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit}
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.prototype.getFixedLimit = function() {
  return /** @type{?proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit, 1));
};


/** @param {?proto.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit|undefined} value */
proto.envoy.config.filter.fault.v2.FaultRateLimit.prototype.setFixedLimit = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.envoy.config.filter.fault.v2.FaultRateLimit.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.prototype.clearFixedLimit = function() {
  this.setFixedLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.prototype.hasFixedLimit = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional HeaderLimit header_limit = 3;
 * @return {?proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit}
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.prototype.getHeaderLimit = function() {
  return /** @type{?proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit} */ (
    jspb.Message.getWrapperField(this, proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit, 3));
};


/** @param {?proto.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit|undefined} value */
proto.envoy.config.filter.fault.v2.FaultRateLimit.prototype.setHeaderLimit = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.envoy.config.filter.fault.v2.FaultRateLimit.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.prototype.clearHeaderLimit = function() {
  this.setHeaderLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.prototype.hasHeaderLimit = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional envoy.type.FractionalPercent percentage = 2;
 * @return {?proto.envoy.type.FractionalPercent}
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.prototype.getPercentage = function() {
  return /** @type{?proto.envoy.type.FractionalPercent} */ (
    jspb.Message.getWrapperField(this, envoy_type_percent_pb.FractionalPercent, 2));
};


/** @param {?proto.envoy.type.FractionalPercent|undefined} value */
proto.envoy.config.filter.fault.v2.FaultRateLimit.prototype.setPercentage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.prototype.clearPercentage = function() {
  this.setPercentage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.envoy.config.filter.fault.v2.FaultRateLimit.prototype.hasPercentage = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.envoy.config.filter.fault.v2);
